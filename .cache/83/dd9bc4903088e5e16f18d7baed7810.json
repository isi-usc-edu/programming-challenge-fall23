{"id":"../../node_modules/brotli/dec/dictionary-browser.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\package.json","includedInParent":true,"mtime":1695411147045},{"name":"base64-js","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\dec\\dictionary-browser.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\base64-js\\index.js"},{"name":"./decode","loc":{"line":11,"column":39,"index":387},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\dec\\dictionary-browser.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\dec\\decode.js"},{"name":"./dictionary.bin.js","loc":{"line":12,"column":46,"index":469},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\dec\\dictionary-browser.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\brotli\\dec\\dictionary.bin.js"}],"generated":{"js":"var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. ðŸ˜œ\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/brotli/dec/dictionary-browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../../node_modules/brotli/dec/dictionary-browser.js":"var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. ðŸ˜œ\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n"},"lineCount":15}},"error":null,"hash":"d57e4eb9eb0ff7af2fcc1a1756b0203c","cacheData":{"env":{}}}