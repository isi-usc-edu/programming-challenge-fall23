{"id":"../../node_modules/restructure/src/Number.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\package.json","includedInParent":true,"mtime":1695411146838},{"name":"./DecodeStream","loc":{"line":1,"column":29,"index":29},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\Number.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\DecodeStream.js"}],"generated":{"js":"const DecodeStream = require('./DecodeStream');\n\nclass NumberT {\n  constructor(type, endian = 'BE') {\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexports.Number = NumberT;\nexports.uint8 = new NumberT('UInt8');\nexports.uint16be = (exports.uint16 = new NumberT('UInt16', 'BE'));\nexports.uint16le = new NumberT('UInt16', 'LE');\nexports.uint24be = (exports.uint24 = new NumberT('UInt24', 'BE'));\nexports.uint24le = new NumberT('UInt24', 'LE');\nexports.uint32be = (exports.uint32 = new NumberT('UInt32', 'BE'));\nexports.uint32le = new NumberT('UInt32', 'LE');\nexports.int8 = new NumberT('Int8');\nexports.int16be = (exports.int16 = new NumberT('Int16', 'BE'));\nexports.int16le = new NumberT('Int16', 'LE');\nexports.int24be = (exports.int24 = new NumberT('Int24', 'BE'));\nexports.int24le = new NumberT('Int24', 'LE');\nexports.int32be = (exports.int32 = new NumberT('Int32', 'BE'));\nexports.int32le = new NumberT('Int32', 'LE');\nexports.floatbe = (exports.float = new NumberT('Float', 'BE'));\nexports.floatle = new NumberT('Float', 'LE');\nexports.doublebe = (exports.double = new NumberT('Double', 'BE'));\nexports.doublele = new NumberT('Double', 'LE');\n\nclass Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexports.Fixed = Fixed;\nexports.fixed16be = (exports.fixed16 = new Fixed(16, 'BE'));\nexports.fixed16le = new Fixed(16, 'LE');\nexports.fixed32be = (exports.fixed32 =new Fixed(32, 'BE'));\nexports.fixed32le = new Fixed(32, 'LE');\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/restructure/src/Number.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/restructure/src/Number.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../../node_modules/restructure/src/Number.js":"const DecodeStream = require('./DecodeStream');\n\nclass NumberT {\n  constructor(type, endian = 'BE') {\n    this.type = type;\n    this.endian = endian;\n    this.fn = this.type;\n    if (this.type[this.type.length - 1] !== '8') {\n      this.fn += this.endian;\n    }\n  }\n\n  size() {\n    return DecodeStream.TYPES[this.type];\n  }\n\n  decode(stream) {\n    return stream[`read${this.fn}`]();\n  }\n\n  encode(stream, val) {\n    return stream[`write${this.fn}`](val);\n  }\n}\n\nexports.Number = NumberT;\nexports.uint8 = new NumberT('UInt8');\nexports.uint16be = (exports.uint16 = new NumberT('UInt16', 'BE'));\nexports.uint16le = new NumberT('UInt16', 'LE');\nexports.uint24be = (exports.uint24 = new NumberT('UInt24', 'BE'));\nexports.uint24le = new NumberT('UInt24', 'LE');\nexports.uint32be = (exports.uint32 = new NumberT('UInt32', 'BE'));\nexports.uint32le = new NumberT('UInt32', 'LE');\nexports.int8 = new NumberT('Int8');\nexports.int16be = (exports.int16 = new NumberT('Int16', 'BE'));\nexports.int16le = new NumberT('Int16', 'LE');\nexports.int24be = (exports.int24 = new NumberT('Int24', 'BE'));\nexports.int24le = new NumberT('Int24', 'LE');\nexports.int32be = (exports.int32 = new NumberT('Int32', 'BE'));\nexports.int32le = new NumberT('Int32', 'LE');\nexports.floatbe = (exports.float = new NumberT('Float', 'BE'));\nexports.floatle = new NumberT('Float', 'LE');\nexports.doublebe = (exports.double = new NumberT('Double', 'BE'));\nexports.doublele = new NumberT('Double', 'LE');\n\nclass Fixed extends NumberT {\n  constructor(size, endian, fracBits = size >> 1) {\n    super(`Int${size}`, endian);\n    this._point = 1 << fracBits;\n  }\n\n  decode(stream) {\n    return super.decode(stream) / this._point;\n  }\n\n  encode(stream, val) {\n    return super.encode(stream, (val * this._point) | 0);\n  }\n}\n\nexports.Fixed = Fixed;\nexports.fixed16be = (exports.fixed16 = new Fixed(16, 'BE'));\nexports.fixed16le = new Fixed(16, 'LE');\nexports.fixed32be = (exports.fixed32 =new Fixed(32, 'BE'));\nexports.fixed32le = new Fixed(32, 'LE');\n"},"lineCount":66}},"error":null,"hash":"69b7ed25d39e33c4fce7459f84d1a0d6","cacheData":{"env":{}}}