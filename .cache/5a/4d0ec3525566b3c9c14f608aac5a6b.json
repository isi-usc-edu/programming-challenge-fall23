{"id":"../../node_modules/restructure/src/Pointer.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\package.json","includedInParent":true,"mtime":1695411146838},{"name":"./utils","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\Pointer.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\utils.js"}],"generated":{"js":"const utils = require('./utils');\n\nclass Pointer {\n  constructor(offsetType, type, options = {}) {\n    this.offsetType = offsetType;\n    this.type = type;\n    this.options = options;\n    if (this.type === 'void') { this.type = null; }\n    if (this.options.type == null) { this.options.type = 'local'; }\n    if (this.options.allowNull == null) { this.options.allowNull = true; }\n    if (this.options.nullValue == null) { this.options.nullValue = 0; }\n    if (this.options.lazy == null) { this.options.lazy = false; }\n    if (this.options.relativeTo) {\n      if (typeof this.options.relativeTo !== 'function') {\n        throw new Error('relativeTo option must be a function');\n      }\n      this.relativeToGetter = options.relativeTo;\n    }\n  }\n\n  decode(stream, ctx) {\n    const offset = this.offsetType.decode(stream, ctx);\n\n    // handle NULL pointers\n    if ((offset === this.options.nullValue) && this.options.allowNull) {\n      return null;\n    }\n\n    let relative;\n    switch (this.options.type) {\n      case 'local':     relative = ctx._startOffset; break;\n      case 'immediate': relative = stream.pos - this.offsetType.size(); break;\n      case 'parent':    relative = ctx.parent._startOffset; break;\n      default:\n        var c = ctx;\n        while (c.parent) {\n          c = c.parent;\n        }\n\n        relative = c._startOffset || 0;\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(ctx);\n    }\n\n    const ptr = offset + relative;\n\n    if (this.type != null) {\n      let val = null;\n      const decodeValue = () => {\n        if (val != null) { return val; }\n\n        const { pos } = stream;\n        stream.pos = ptr;\n        val = this.type.decode(stream, ctx);\n        stream.pos = pos;\n        return val;\n      };\n\n      // If this is a lazy pointer, define a getter to decode only when needed.\n      // This obviously only works when the pointer is contained by a Struct.\n      if (this.options.lazy) {\n        return new utils.PropertyDescriptor({\n          get: decodeValue});\n      }\n\n      return decodeValue();\n    } else {\n      return ptr;\n    }\n  }\n\n  size(val, ctx) {\n    const parent = ctx;\n    switch (this.options.type) {\n      case 'local': case 'immediate':\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        break;\n      default: // global\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    if (val && ctx) {\n      ctx.pointerSize += type.size(val, parent);\n    }\n\n    return this.offsetType.size();\n  }\n\n  encode(stream, val, ctx) {\n    let relative;\n    const parent = ctx;\n    if ((val == null)) {\n      this.offsetType.encode(stream, this.options.nullValue);\n      return;\n    }\n\n    switch (this.options.type) {\n      case 'local':\n        relative = ctx.startOffset;\n        break;\n      case 'immediate':\n        relative = stream.pos + this.offsetType.size(val, parent);\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        relative = ctx.startOffset;\n        break;\n      default: // global\n        relative = 0;\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(parent.val);\n    }\n\n    this.offsetType.encode(stream, ctx.pointerOffset - relative);\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    ctx.pointers.push({\n      type,\n      val,\n      parent\n    });\n\n    return ctx.pointerOffset += type.size(val, parent);\n  }\n}\n\n// A pointer whose type is determined at decode time\nclass VoidPointer {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexports.Pointer = Pointer;\nexports.VoidPointer = VoidPointer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/restructure/src/Pointer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}}],"sources":{"../../node_modules/restructure/src/Pointer.js":"const utils = require('./utils');\n\nclass Pointer {\n  constructor(offsetType, type, options = {}) {\n    this.offsetType = offsetType;\n    this.type = type;\n    this.options = options;\n    if (this.type === 'void') { this.type = null; }\n    if (this.options.type == null) { this.options.type = 'local'; }\n    if (this.options.allowNull == null) { this.options.allowNull = true; }\n    if (this.options.nullValue == null) { this.options.nullValue = 0; }\n    if (this.options.lazy == null) { this.options.lazy = false; }\n    if (this.options.relativeTo) {\n      if (typeof this.options.relativeTo !== 'function') {\n        throw new Error('relativeTo option must be a function');\n      }\n      this.relativeToGetter = options.relativeTo;\n    }\n  }\n\n  decode(stream, ctx) {\n    const offset = this.offsetType.decode(stream, ctx);\n\n    // handle NULL pointers\n    if ((offset === this.options.nullValue) && this.options.allowNull) {\n      return null;\n    }\n\n    let relative;\n    switch (this.options.type) {\n      case 'local':     relative = ctx._startOffset; break;\n      case 'immediate': relative = stream.pos - this.offsetType.size(); break;\n      case 'parent':    relative = ctx.parent._startOffset; break;\n      default:\n        var c = ctx;\n        while (c.parent) {\n          c = c.parent;\n        }\n\n        relative = c._startOffset || 0;\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(ctx);\n    }\n\n    const ptr = offset + relative;\n\n    if (this.type != null) {\n      let val = null;\n      const decodeValue = () => {\n        if (val != null) { return val; }\n\n        const { pos } = stream;\n        stream.pos = ptr;\n        val = this.type.decode(stream, ctx);\n        stream.pos = pos;\n        return val;\n      };\n\n      // If this is a lazy pointer, define a getter to decode only when needed.\n      // This obviously only works when the pointer is contained by a Struct.\n      if (this.options.lazy) {\n        return new utils.PropertyDescriptor({\n          get: decodeValue});\n      }\n\n      return decodeValue();\n    } else {\n      return ptr;\n    }\n  }\n\n  size(val, ctx) {\n    const parent = ctx;\n    switch (this.options.type) {\n      case 'local': case 'immediate':\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        break;\n      default: // global\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    if (val && ctx) {\n      ctx.pointerSize += type.size(val, parent);\n    }\n\n    return this.offsetType.size();\n  }\n\n  encode(stream, val, ctx) {\n    let relative;\n    const parent = ctx;\n    if ((val == null)) {\n      this.offsetType.encode(stream, this.options.nullValue);\n      return;\n    }\n\n    switch (this.options.type) {\n      case 'local':\n        relative = ctx.startOffset;\n        break;\n      case 'immediate':\n        relative = stream.pos + this.offsetType.size(val, parent);\n        break;\n      case 'parent':\n        ctx = ctx.parent;\n        relative = ctx.startOffset;\n        break;\n      default: // global\n        relative = 0;\n        while (ctx.parent) {\n          ctx = ctx.parent;\n        }\n    }\n\n    if (this.options.relativeTo) {\n      relative += this.relativeToGetter(parent.val);\n    }\n\n    this.offsetType.encode(stream, ctx.pointerOffset - relative);\n\n    let { type } = this;\n    if (type == null) {\n      if (!(val instanceof VoidPointer)) {\n        throw new Error(\"Must be a VoidPointer\");\n      }\n\n      ({ type } = val);\n      val = val.value;\n    }\n\n    ctx.pointers.push({\n      type,\n      val,\n      parent\n    });\n\n    return ctx.pointerOffset += type.size(val, parent);\n  }\n}\n\n// A pointer whose type is determined at decode time\nclass VoidPointer {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexports.Pointer = Pointer;\nexports.VoidPointer = VoidPointer;\n"},"lineCount":167}},"error":null,"hash":"cb2dc30217d36580b0d58a8e8f588094","cacheData":{"env":{}}}