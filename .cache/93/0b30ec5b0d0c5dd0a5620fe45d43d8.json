{"id":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\linebreak\\node_modules\\unicode-trie\\package.json","includedInParent":true,"mtime":1695411146371}],"generated":{"js":"const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/linebreak/node_modules/unicode-trie/swap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../node_modules/linebreak/node_modules/unicode-trie/swap.js":"const isBigEndian = (new Uint8Array(new Uint32Array([0x12345678]).buffer)[0] === 0x12);\n\nconst swap = (b, n, m) => {\n  let i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n};\n\nconst swap32 = array => {\n  const len = array.length;\n  for (let i = 0; i < len; i += 4) {\n    swap(array, i, i + 3);\n    swap(array, i + 1, i + 2);\n  }\n};\n\nconst swap32LE = array => {\n  if (isBigEndian) {\n    swap32(array);\n  }\n};\n\nmodule.exports = {\n  swap32LE: swap32LE\n};\n"},"lineCount":26}},"error":null,"hash":"c46a39300d8d4f7c714f02eb39f42755","cacheData":{"env":{}}}