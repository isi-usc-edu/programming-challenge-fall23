{"id":"../../node_modules/png-js/png-node.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\png-js\\package.json","includedInParent":true,"mtime":1695411146496},{"name":"fs","loc":{"line":21,"column":19,"index":1143},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"zlib","loc":{"line":22,"column":21,"index":1171},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\browserify-zlib\\lib\\index.js"},{"name":"buffer","parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\png-js\\png-node.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*\n * MIT LICENSE\n * Copyright (c) 2011 Devon Govett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst zlib = require('zlib');\n\nmodule.exports = class PNG {\n  static decode(path, fn) {\n    return fs.readFile(path, function(err, file) {\n      const png = new PNG(file);\n      return png.decode(pixels => fn(pixels));\n    });\n  }\n\n  static load(path) {\n    const file = fs.readFileSync(path);\n    return new PNG(file);\n  }\n\n  constructor(data) {\n    let i;\n    this.data = data;\n    this.pos = 8; // Skip the default header\n\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.text = {};\n\n    while (true) {\n      const chunkSize = this.readUInt32();\n      let section = '';\n      for (i = 0; i < 4; i++) {\n        section += String.fromCharCode(this.data[this.pos++]);\n      }\n\n      switch (section) {\n        case 'IHDR':\n          // we can grab  interesting values from here (like width, height, etc)\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n\n        case 'PLTE':\n          this.palette = this.read(chunkSize);\n          break;\n\n        case 'IDAT':\n          for (i = 0; i < chunkSize; i++) {\n            this.imgData.push(this.data[this.pos++]);\n          }\n          break;\n\n        case 'tRNS':\n          // This chunk can only occur once and it must occur after the\n          // PLTE chunk and before the IDAT chunk.\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              // Indexed color, RGB. Each byte in this chunk is an alpha for\n              // the palette index in the PLTE (\"palette\") chunk up until the\n              // last non-opaque entry. Set up an array, stretching over all\n              // palette entries which will be 0 (opaque) or 1 (transparent).\n              this.transparency.indexed = this.read(chunkSize);\n              var short = 255 - this.transparency.indexed.length;\n              if (short > 0) {\n                for (i = 0; i < short; i++) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              // Greyscale. Corresponding to entries in the PLTE chunk.\n              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              // True color with proper alpha channel.\n              this.transparency.rgb = this.read(chunkSize);\n              break;\n          }\n          break;\n\n        case 'tEXt':\n          var text = this.read(chunkSize);\n          var index = text.indexOf(0);\n          var key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(\n            String,\n            text.slice(index + 1)\n          );\n          break;\n\n        case 'IEND':\n          // we've got everything we need!\n          switch (this.colorType) {\n            case 0:\n            case 3:\n            case 4:\n              this.colors = 1;\n              break;\n            case 2:\n            case 6:\n              this.colors = 3;\n              break;\n          }\n\n          this.hasAlphaChannel = [4, 6].includes(this.colorType);\n          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n\n          switch (this.colors) {\n            case 1:\n              this.colorSpace = 'DeviceGray';\n              break;\n            case 3:\n              this.colorSpace = 'DeviceRGB';\n              break;\n          }\n\n          this.imgData = new Buffer(this.imgData);\n          return;\n          break;\n\n        default:\n          // unknown (or unimportant) section, skip it\n          this.pos += chunkSize;\n      }\n\n      this.pos += 4; // Skip the CRC\n\n      if (this.pos > this.data.length) {\n        throw new Error('Incomplete or corrupt PNG file');\n      }\n    }\n  }\n\n  read(bytes) {\n    const result = new Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      result[i] = this.data[this.pos++];\n    }\n    return result;\n  }\n\n  readUInt32() {\n    const b1 = this.data[this.pos++] << 24;\n    const b2 = this.data[this.pos++] << 16;\n    const b3 = this.data[this.pos++] << 8;\n    const b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  }\n\n  readUInt16() {\n    const b1 = this.data[this.pos++] << 8;\n    const b2 = this.data[this.pos++];\n    return b1 | b2;\n  }\n\n  decodePixels(fn) {\n    return zlib.inflate(this.imgData, (err, data) => {\n      if (err) {\n        throw err;\n      }\n\n      const { width, height } = this;\n      const pixelBytes = this.pixelBitlength / 8;\n\n      const pixels = new Buffer(width * height * pixelBytes);\n      const { length } = data;\n      let pos = 0;\n\n      function pass(x0, y0, dx, dy, singlePass = false) {\n        const w = Math.ceil((width - x0) / dx);\n        const h = Math.ceil((height - y0) / dy);\n        const scanlineLength = pixelBytes * w;\n        const buffer = singlePass ? pixels : new Buffer(scanlineLength * h);\n        let row = 0;\n        let c = 0;\n        while (row < h && pos < length) {\n          var byte, col, i, left, upper;\n          switch (data[pos++]) {\n            case 0: // None\n              for (i = 0; i < scanlineLength; i++) {\n                buffer[c++] = data[pos++];\n              }\n              break;\n\n            case 1: // Sub\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                buffer[c++] = (byte + left) % 256;\n              }\n              break;\n\n            case 2: // Up\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                upper =\n                  row &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                buffer[c++] = (upper + byte) % 256;\n              }\n              break;\n\n            case 3: // Average\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                upper =\n                  row &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n\n            case 4: // Paeth\n              for (i = 0; i < scanlineLength; i++) {\n                var paeth, upperLeft;\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper =\n                    buffer[\n                      (row - 1) * scanlineLength +\n                        col * pixelBytes +\n                        (i % pixelBytes)\n                    ];\n                  upperLeft =\n                    col &&\n                    buffer[\n                      (row - 1) * scanlineLength +\n                        (col - 1) * pixelBytes +\n                        (i % pixelBytes)\n                    ];\n                }\n\n                const p = left + upper - upperLeft;\n                const pa = Math.abs(p - left);\n                const pb = Math.abs(p - upper);\n                const pc = Math.abs(p - upperLeft);\n\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n\n                buffer[c++] = (byte + paeth) % 256;\n              }\n              break;\n\n            default:\n              throw new Error(`Invalid filter algorithm: ${data[pos - 1]}`);\n          }\n\n          if (!singlePass) {\n            let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n            let bufferPos = row * scanlineLength;\n            for (i = 0; i < w; i++) {\n              for (let j = 0; j < pixelBytes; j++)\n                pixels[pixelsPos++] = buffer[bufferPos++];\n              pixelsPos += (dx - 1) * pixelBytes;\n            }\n          }\n\n          row++;\n        }\n      }\n\n      if (this.interlaceMethod === 1) {\n        /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n        pass(0, 0, 8, 8); // 1\n        pass(4, 0, 8, 8); // 2\n        pass(0, 4, 4, 8); // 3\n        pass(2, 0, 4, 4); // 4\n        pass(0, 2, 2, 4); // 5\n        pass(1, 0, 2, 2); // 6\n        pass(0, 1, 1, 2); // 7\n      } else {\n        pass(0, 0, 1, 1, true);\n      }\n\n      return fn(pixels);\n    });\n  }\n\n  decodePalette() {\n    const { palette } = this;\n    const { length } = palette;\n    const transparency = this.transparency.indexed || [];\n    const ret = new Buffer(transparency.length + length);\n    let pos = 0;\n    let c = 0;\n\n    for (let i = 0; i < length; i += 3) {\n      var left;\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n    }\n\n    return ret;\n  }\n\n  copyToImageData(imageData, pixels) {\n    let j, k;\n    let { colors } = this;\n    let palette = null;\n    let alpha = this.hasAlphaChannel;\n\n    if (this.palette.length) {\n      palette =\n        this._decodedPalette || (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n\n    const data = imageData.data || imageData;\n    const { length } = data;\n    const input = palette || pixels;\n    let i = (j = 0);\n\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        const v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  }\n\n  decode(fn) {\n    const ret = new Buffer(this.width * this.height * 4);\n    return this.decodePixels(pixels => {\n      this.copyToImageData(ret, pixels);\n      return fn(ret);\n    });\n  }\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/png-js/png-node.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/png-js/png-node.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}}],"sources":{"../../node_modules/png-js/png-node.js":"/*\n * MIT LICENSE\n * Copyright (c) 2011 Devon Govett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst fs = require('fs');\nconst zlib = require('zlib');\n\nmodule.exports = class PNG {\n  static decode(path, fn) {\n    return fs.readFile(path, function(err, file) {\n      const png = new PNG(file);\n      return png.decode(pixels => fn(pixels));\n    });\n  }\n\n  static load(path) {\n    const file = fs.readFileSync(path);\n    return new PNG(file);\n  }\n\n  constructor(data) {\n    let i;\n    this.data = data;\n    this.pos = 8; // Skip the default header\n\n    this.palette = [];\n    this.imgData = [];\n    this.transparency = {};\n    this.text = {};\n\n    while (true) {\n      const chunkSize = this.readUInt32();\n      let section = '';\n      for (i = 0; i < 4; i++) {\n        section += String.fromCharCode(this.data[this.pos++]);\n      }\n\n      switch (section) {\n        case 'IHDR':\n          // we can grab  interesting values from here (like width, height, etc)\n          this.width = this.readUInt32();\n          this.height = this.readUInt32();\n          this.bits = this.data[this.pos++];\n          this.colorType = this.data[this.pos++];\n          this.compressionMethod = this.data[this.pos++];\n          this.filterMethod = this.data[this.pos++];\n          this.interlaceMethod = this.data[this.pos++];\n          break;\n\n        case 'PLTE':\n          this.palette = this.read(chunkSize);\n          break;\n\n        case 'IDAT':\n          for (i = 0; i < chunkSize; i++) {\n            this.imgData.push(this.data[this.pos++]);\n          }\n          break;\n\n        case 'tRNS':\n          // This chunk can only occur once and it must occur after the\n          // PLTE chunk and before the IDAT chunk.\n          this.transparency = {};\n          switch (this.colorType) {\n            case 3:\n              // Indexed color, RGB. Each byte in this chunk is an alpha for\n              // the palette index in the PLTE (\"palette\") chunk up until the\n              // last non-opaque entry. Set up an array, stretching over all\n              // palette entries which will be 0 (opaque) or 1 (transparent).\n              this.transparency.indexed = this.read(chunkSize);\n              var short = 255 - this.transparency.indexed.length;\n              if (short > 0) {\n                for (i = 0; i < short; i++) {\n                  this.transparency.indexed.push(255);\n                }\n              }\n              break;\n            case 0:\n              // Greyscale. Corresponding to entries in the PLTE chunk.\n              // Grey is two bytes, range 0 .. (2 ^ bit-depth) - 1\n              this.transparency.grayscale = this.read(chunkSize)[0];\n              break;\n            case 2:\n              // True color with proper alpha channel.\n              this.transparency.rgb = this.read(chunkSize);\n              break;\n          }\n          break;\n\n        case 'tEXt':\n          var text = this.read(chunkSize);\n          var index = text.indexOf(0);\n          var key = String.fromCharCode.apply(String, text.slice(0, index));\n          this.text[key] = String.fromCharCode.apply(\n            String,\n            text.slice(index + 1)\n          );\n          break;\n\n        case 'IEND':\n          // we've got everything we need!\n          switch (this.colorType) {\n            case 0:\n            case 3:\n            case 4:\n              this.colors = 1;\n              break;\n            case 2:\n            case 6:\n              this.colors = 3;\n              break;\n          }\n\n          this.hasAlphaChannel = [4, 6].includes(this.colorType);\n          var colors = this.colors + (this.hasAlphaChannel ? 1 : 0);\n          this.pixelBitlength = this.bits * colors;\n\n          switch (this.colors) {\n            case 1:\n              this.colorSpace = 'DeviceGray';\n              break;\n            case 3:\n              this.colorSpace = 'DeviceRGB';\n              break;\n          }\n\n          this.imgData = new Buffer(this.imgData);\n          return;\n          break;\n\n        default:\n          // unknown (or unimportant) section, skip it\n          this.pos += chunkSize;\n      }\n\n      this.pos += 4; // Skip the CRC\n\n      if (this.pos > this.data.length) {\n        throw new Error('Incomplete or corrupt PNG file');\n      }\n    }\n  }\n\n  read(bytes) {\n    const result = new Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      result[i] = this.data[this.pos++];\n    }\n    return result;\n  }\n\n  readUInt32() {\n    const b1 = this.data[this.pos++] << 24;\n    const b2 = this.data[this.pos++] << 16;\n    const b3 = this.data[this.pos++] << 8;\n    const b4 = this.data[this.pos++];\n    return b1 | b2 | b3 | b4;\n  }\n\n  readUInt16() {\n    const b1 = this.data[this.pos++] << 8;\n    const b2 = this.data[this.pos++];\n    return b1 | b2;\n  }\n\n  decodePixels(fn) {\n    return zlib.inflate(this.imgData, (err, data) => {\n      if (err) {\n        throw err;\n      }\n\n      const { width, height } = this;\n      const pixelBytes = this.pixelBitlength / 8;\n\n      const pixels = new Buffer(width * height * pixelBytes);\n      const { length } = data;\n      let pos = 0;\n\n      function pass(x0, y0, dx, dy, singlePass = false) {\n        const w = Math.ceil((width - x0) / dx);\n        const h = Math.ceil((height - y0) / dy);\n        const scanlineLength = pixelBytes * w;\n        const buffer = singlePass ? pixels : new Buffer(scanlineLength * h);\n        let row = 0;\n        let c = 0;\n        while (row < h && pos < length) {\n          var byte, col, i, left, upper;\n          switch (data[pos++]) {\n            case 0: // None\n              for (i = 0; i < scanlineLength; i++) {\n                buffer[c++] = data[pos++];\n              }\n              break;\n\n            case 1: // Sub\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                buffer[c++] = (byte + left) % 256;\n              }\n              break;\n\n            case 2: // Up\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                upper =\n                  row &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                buffer[c++] = (upper + byte) % 256;\n              }\n              break;\n\n            case 3: // Average\n              for (i = 0; i < scanlineLength; i++) {\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n                upper =\n                  row &&\n                  buffer[\n                    (row - 1) * scanlineLength +\n                      col * pixelBytes +\n                      (i % pixelBytes)\n                  ];\n                buffer[c++] = (byte + Math.floor((left + upper) / 2)) % 256;\n              }\n              break;\n\n            case 4: // Paeth\n              for (i = 0; i < scanlineLength; i++) {\n                var paeth, upperLeft;\n                byte = data[pos++];\n                col = (i - (i % pixelBytes)) / pixelBytes;\n                left = i < pixelBytes ? 0 : buffer[c - pixelBytes];\n\n                if (row === 0) {\n                  upper = upperLeft = 0;\n                } else {\n                  upper =\n                    buffer[\n                      (row - 1) * scanlineLength +\n                        col * pixelBytes +\n                        (i % pixelBytes)\n                    ];\n                  upperLeft =\n                    col &&\n                    buffer[\n                      (row - 1) * scanlineLength +\n                        (col - 1) * pixelBytes +\n                        (i % pixelBytes)\n                    ];\n                }\n\n                const p = left + upper - upperLeft;\n                const pa = Math.abs(p - left);\n                const pb = Math.abs(p - upper);\n                const pc = Math.abs(p - upperLeft);\n\n                if (pa <= pb && pa <= pc) {\n                  paeth = left;\n                } else if (pb <= pc) {\n                  paeth = upper;\n                } else {\n                  paeth = upperLeft;\n                }\n\n                buffer[c++] = (byte + paeth) % 256;\n              }\n              break;\n\n            default:\n              throw new Error(`Invalid filter algorithm: ${data[pos - 1]}`);\n          }\n\n          if (!singlePass) {\n            let pixelsPos = ((y0 + row * dy) * width + x0) * pixelBytes;\n            let bufferPos = row * scanlineLength;\n            for (i = 0; i < w; i++) {\n              for (let j = 0; j < pixelBytes; j++)\n                pixels[pixelsPos++] = buffer[bufferPos++];\n              pixelsPos += (dx - 1) * pixelBytes;\n            }\n          }\n\n          row++;\n        }\n      }\n\n      if (this.interlaceMethod === 1) {\n        /*\n          1 6 4 6 2 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n          3 6 4 6 3 6 4 6\n          7 7 7 7 7 7 7 7\n          5 6 5 6 5 6 5 6\n          7 7 7 7 7 7 7 7\n        */\n        pass(0, 0, 8, 8); // 1\n        pass(4, 0, 8, 8); // 2\n        pass(0, 4, 4, 8); // 3\n        pass(2, 0, 4, 4); // 4\n        pass(0, 2, 2, 4); // 5\n        pass(1, 0, 2, 2); // 6\n        pass(0, 1, 1, 2); // 7\n      } else {\n        pass(0, 0, 1, 1, true);\n      }\n\n      return fn(pixels);\n    });\n  }\n\n  decodePalette() {\n    const { palette } = this;\n    const { length } = palette;\n    const transparency = this.transparency.indexed || [];\n    const ret = new Buffer(transparency.length + length);\n    let pos = 0;\n    let c = 0;\n\n    for (let i = 0; i < length; i += 3) {\n      var left;\n      ret[pos++] = palette[i];\n      ret[pos++] = palette[i + 1];\n      ret[pos++] = palette[i + 2];\n      ret[pos++] = (left = transparency[c++]) != null ? left : 255;\n    }\n\n    return ret;\n  }\n\n  copyToImageData(imageData, pixels) {\n    let j, k;\n    let { colors } = this;\n    let palette = null;\n    let alpha = this.hasAlphaChannel;\n\n    if (this.palette.length) {\n      palette =\n        this._decodedPalette || (this._decodedPalette = this.decodePalette());\n      colors = 4;\n      alpha = true;\n    }\n\n    const data = imageData.data || imageData;\n    const { length } = data;\n    const input = palette || pixels;\n    let i = (j = 0);\n\n    if (colors === 1) {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        const v = input[k++];\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = v;\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    } else {\n      while (i < length) {\n        k = palette ? pixels[i / 4] * 4 : j;\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = input[k++];\n        data[i++] = alpha ? input[k++] : 255;\n        j = k;\n      }\n    }\n  }\n\n  decode(fn) {\n    const ret = new Buffer(this.width * this.height * 4);\n    return this.decodePixels(pixels => {\n      this.copyToImageData(ret, pixels);\n      return fn(ret);\n    });\n  }\n};\n"},"lineCount":404}},"error":null,"hash":"2de90dea47a866e963b1af875c7f0836","cacheData":{"env":{}}}