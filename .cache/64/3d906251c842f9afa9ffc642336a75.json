{"id":"../../node_modules/deep-equal/index.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\package.json","includedInParent":true,"mtime":1686344060070},{"name":"object.assign","loc":{"line":3,"column":21,"index":36},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\object.assign\\index.js"},{"name":"call-bind/callBound","loc":{"line":4,"column":24,"index":78},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\call-bind\\callBound.js"},{"name":"regexp.prototype.flags","loc":{"line":5,"column":20,"index":122},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\regexp.prototype.flags\\index.js"},{"name":"get-intrinsic","loc":{"line":6,"column":27,"index":176},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\get-intrinsic\\index.js"},{"name":"es-get-iterator","loc":{"line":7,"column":26,"index":220},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\es-get-iterator\\index.js"},{"name":"side-channel","loc":{"line":8,"column":29,"index":269},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\side-channel\\index.js"},{"name":"object-is","loc":{"line":9,"column":17,"index":303},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\object-is\\index.js"},{"name":"is-arguments","loc":{"line":10,"column":26,"index":343},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\is-arguments\\index.js"},{"name":"isarray","loc":{"line":11,"column":22,"index":382},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\isarray\\index.js"},{"name":"is-array-buffer","loc":{"line":12,"column":28,"index":422},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\is-array-buffer\\index.js"},{"name":"is-date-object","loc":{"line":13,"column":21,"index":463},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\is-date-object\\index.js"},{"name":"is-regex","loc":{"line":14,"column":22,"index":504},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\is-regex\\index.js"},{"name":"is-shared-array-buffer","loc":{"line":15,"column":34,"index":551},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\is-shared-array-buffer\\index.js"},{"name":"object-keys","loc":{"line":16,"column":25,"index":603},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\object-keys\\index.js"},{"name":"which-boxed-primitive","loc":{"line":17,"column":34,"index":653},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\which-boxed-primitive\\index.js"},{"name":"which-collection","loc":{"line":18,"column":30,"index":709},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\which-collection\\index.js"},{"name":"which-typed-array","loc":{"line":19,"column":30,"index":760},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\which-typed-array\\index.js"},{"name":"array-buffer-byte-length","loc":{"line":20,"column":25,"index":807},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\deep-equal\\index.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\array-buffer-byte-length\\index.js"}],"generated":{"js":"'use strict';\n\nvar assign = require('object.assign');\nvar callBound = require('call-bind/callBound');\nvar flags = require('regexp.prototype.flags');\nvar GetIntrinsic = require('get-intrinsic');\nvar getIterator = require('es-get-iterator');\nvar getSideChannel = require('side-channel');\nvar is = require('object-is');\nvar isArguments = require('is-arguments');\nvar isArray = require('isarray');\nvar isArrayBuffer = require('is-array-buffer');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\nvar objectKeys = require('object-keys');\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar byteLength = require('array-buffer-byte-length');\n\nvar sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\nvar $getTime = callBound('Date.prototype.getTime');\nvar gPO = Object.getPrototypeOf;\nvar $objToString = callBound('Object.prototype.toString');\n\nvar $Set = GetIntrinsic('%Set%', true);\nvar $mapHas = callBound('Map.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSize = callBound('Map.prototype.size', true);\nvar $setAdd = callBound('Set.prototype.add', true);\nvar $setDelete = callBound('Set.prototype.delete', true);\nvar $setHas = callBound('Set.prototype.has', true);\nvar $setSize = callBound('Set.prototype.size', true);\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414\nfunction setHasEqualElement(set, val1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  while ((result = i.next()) && !result.done) {\n    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define\n      // Remove the matching element to make sure we do not check that again.\n      $setDelete(set, result.value);\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439\nfunction findLooseMatchingPrimitives(prim) {\n  if (typeof prim === 'undefined') {\n    return null;\n  }\n  if (typeof prim === 'object') { // Only pass in null as object!\n    return void 0;\n  }\n  if (typeof prim === 'symbol') {\n    return false;\n  }\n  if (typeof prim === 'string' || typeof prim === 'number') {\n    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.\n    return +prim === +prim; // eslint-disable-line no-implicit-coercion\n  }\n  return true;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460\nfunction mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = $mapGet(b, altValue);\n  var looseOpts = assign({}, opts, { strict: false });\n  if (\n    (typeof curB === 'undefined' && !$mapHas(b, altValue))\n    // eslint-disable-next-line no-use-before-define\n    || !internalDeepEqual(item, curB, looseOpts, channel)\n  ) {\n    return false;\n  }\n  // eslint-disable-next-line no-use-before-define\n  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n\n  return $setHas(b, altValue) && !$setHas(a, altValue);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533\nfunction mapHasEqualEntry(set, map, key1, item1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  var key2;\n  while ((result = i.next()) && !result.done) {\n    key2 = result.value;\n    if (\n      // eslint-disable-next-line no-use-before-define\n      internalDeepEqual(key1, key2, opts, channel)\n      // eslint-disable-next-line no-use-before-define\n      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)\n    ) {\n      $setDelete(set, key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction internalDeepEqual(actual, expected, options, channel) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  var actualBoxed = whichBoxedPrimitive(actual);\n  var expectedBoxed = whichBoxedPrimitive(expected);\n  if (actualBoxed !== expectedBoxed) {\n    return false;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration\n\n  var hasActual = channel.has(actual);\n  var hasExpected = channel.has(expected);\n  var sentinel;\n  if (hasActual && hasExpected) {\n    if (channel.get(actual) === channel.get(expected)) {\n      return true;\n    }\n  } else {\n    sentinel = {};\n  }\n  if (!hasActual) { channel.set(actual, sentinel); }\n  if (!hasExpected) { channel.set(expected, sentinel); }\n\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts, channel);\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n\n  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));\n}\n\nfunction setEquiv(a, b, opts, channel) {\n  if ($setSize(a) !== $setSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  while ((resultA = iA.next()) && !resultA.done) {\n    if (resultA.value && typeof resultA.value === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    } else if (!$setHas(b, resultA.value)) {\n      if (opts.strict) { return false; }\n      if (!setMightHaveLoosePrim(a, b, resultA.value)) {\n        return false;\n      }\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    }\n  }\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.\n      if (resultB.value && typeof resultB.value === 'object') {\n        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && !$setHas(a, resultB.value)\n        && !setHasEqualElement(set, resultB.value, opts.strict, channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction mapEquiv(a, b, opts, channel) {\n  if ($mapSize(a) !== $mapSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  var key;\n  var item1;\n  var item2;\n  while ((resultA = iA.next()) && !resultA.done) {\n    key = resultA.value[0];\n    item1 = resultA.value[1];\n    if (key && typeof key === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, key);\n    } else {\n      item2 = $mapGet(b, key);\n      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {\n        if (opts.strict) {\n          return false;\n        }\n        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {\n          return false;\n        }\n        if (!set) { set = new $Set(); }\n        $setAdd(set, key);\n      }\n    }\n  }\n\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      key = resultB.value[0];\n      item2 = resultB.value[1];\n      if (key && typeof key === 'object') {\n        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))\n        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts, channel) {\n  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5], max-lines: [2, 400] */\n  var i, key;\n\n  if (typeof a !== typeof b) { return false; }\n  if (a == null || b == null) { return false; }\n\n  if ($objToString(a) !== $objToString(b)) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n  if (aIsArray !== bIsArray) { return false; }\n\n  // TODO: replace when a cross-realm brand check is available\n  var aIsError = a instanceof Error;\n  var bIsError = b instanceof Error;\n  if (aIsError !== bIsError) { return false; }\n  if (aIsError || bIsError) {\n    if (a.name !== b.name || a.message !== b.message) { return false; }\n  }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {\n    return false;\n  }\n\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n  if (aIsDate !== bIsDate) { return false; }\n  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here\n    if ($getTime(a) !== $getTime(b)) { return false; }\n  }\n  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }\n\n  var aWhich = whichTypedArray(a);\n  var bWhich = whichTypedArray(b);\n  if ((aWhich || bWhich) && aWhich !== bWhich) {\n    return false;\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  var aIsArrayBuffer = isArrayBuffer(a);\n  var bIsArrayBuffer = isArrayBuffer(b);\n  if (aIsArrayBuffer !== bIsArrayBuffer) { return false; }\n  if (aIsArrayBuffer || bIsArrayBuffer) { // && would work too, because both are true or both false here\n    if (byteLength(a) !== byteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  var aIsSAB = isSharedArrayBuffer(a);\n  var bIsSAB = isSharedArrayBuffer(b);\n  if (aIsSAB !== bIsSAB) { return false; }\n  if (aIsSAB || bIsSAB) { // && would work too, because both are true or both false here\n    if (sabByteLength(a) !== sabByteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq\n  }\n\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }\n  }\n\n  var aCollection = whichCollection(a);\n  var bCollection = whichCollection(b);\n  if (aCollection !== bCollection) {\n    return false;\n  }\n  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection\n    return setEquiv(a, b, opts, channel);\n  }\n  if (aCollection === 'Map') { // aCollection === bCollection\n    return mapEquiv(a, b, opts, channel);\n  }\n\n  return true;\n}\n\nmodule.exports = function deepEqual(a, b, opts) {\n  return internalDeepEqual(a, b, opts, getSideChannel());\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/deep-equal/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/deep-equal/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}}],"sources":{"../../node_modules/deep-equal/index.js":"'use strict';\n\nvar assign = require('object.assign');\nvar callBound = require('call-bind/callBound');\nvar flags = require('regexp.prototype.flags');\nvar GetIntrinsic = require('get-intrinsic');\nvar getIterator = require('es-get-iterator');\nvar getSideChannel = require('side-channel');\nvar is = require('object-is');\nvar isArguments = require('is-arguments');\nvar isArray = require('isarray');\nvar isArrayBuffer = require('is-array-buffer');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isSharedArrayBuffer = require('is-shared-array-buffer');\nvar objectKeys = require('object-keys');\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar byteLength = require('array-buffer-byte-length');\n\nvar sabByteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\nvar $getTime = callBound('Date.prototype.getTime');\nvar gPO = Object.getPrototypeOf;\nvar $objToString = callBound('Object.prototype.toString');\n\nvar $Set = GetIntrinsic('%Set%', true);\nvar $mapHas = callBound('Map.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSize = callBound('Map.prototype.size', true);\nvar $setAdd = callBound('Set.prototype.add', true);\nvar $setDelete = callBound('Set.prototype.delete', true);\nvar $setHas = callBound('Set.prototype.has', true);\nvar $setSize = callBound('Set.prototype.size', true);\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414\nfunction setHasEqualElement(set, val1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  while ((result = i.next()) && !result.done) {\n    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define\n      // Remove the matching element to make sure we do not check that again.\n      $setDelete(set, result.value);\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439\nfunction findLooseMatchingPrimitives(prim) {\n  if (typeof prim === 'undefined') {\n    return null;\n  }\n  if (typeof prim === 'object') { // Only pass in null as object!\n    return void 0;\n  }\n  if (typeof prim === 'symbol') {\n    return false;\n  }\n  if (typeof prim === 'string' || typeof prim === 'number') {\n    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.\n    return +prim === +prim; // eslint-disable-line no-implicit-coercion\n  }\n  return true;\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460\nfunction mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = $mapGet(b, altValue);\n  var looseOpts = assign({}, opts, { strict: false });\n  if (\n    (typeof curB === 'undefined' && !$mapHas(b, altValue))\n    // eslint-disable-next-line no-use-before-define\n    || !internalDeepEqual(item, curB, looseOpts, channel)\n  ) {\n    return false;\n  }\n  // eslint-disable-next-line no-use-before-define\n  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n\n  return $setHas(b, altValue) && !$setHas(a, altValue);\n}\n\n// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533\nfunction mapHasEqualEntry(set, map, key1, item1, opts, channel) {\n  var i = getIterator(set);\n  var result;\n  var key2;\n  while ((result = i.next()) && !result.done) {\n    key2 = result.value;\n    if (\n      // eslint-disable-next-line no-use-before-define\n      internalDeepEqual(key1, key2, opts, channel)\n      // eslint-disable-next-line no-use-before-define\n      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)\n    ) {\n      $setDelete(set, key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction internalDeepEqual(actual, expected, options, channel) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  var actualBoxed = whichBoxedPrimitive(actual);\n  var expectedBoxed = whichBoxedPrimitive(expected);\n  if (actualBoxed !== expectedBoxed) {\n    return false;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration\n\n  var hasActual = channel.has(actual);\n  var hasExpected = channel.has(expected);\n  var sentinel;\n  if (hasActual && hasExpected) {\n    if (channel.get(actual) === channel.get(expected)) {\n      return true;\n    }\n  } else {\n    sentinel = {};\n  }\n  if (!hasActual) { channel.set(actual, sentinel); }\n  if (!hasExpected) { channel.set(expected, sentinel); }\n\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts, channel);\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n\n  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));\n}\n\nfunction setEquiv(a, b, opts, channel) {\n  if ($setSize(a) !== $setSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  while ((resultA = iA.next()) && !resultA.done) {\n    if (resultA.value && typeof resultA.value === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    } else if (!$setHas(b, resultA.value)) {\n      if (opts.strict) { return false; }\n      if (!setMightHaveLoosePrim(a, b, resultA.value)) {\n        return false;\n      }\n      if (!set) { set = new $Set(); }\n      $setAdd(set, resultA.value);\n    }\n  }\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.\n      if (resultB.value && typeof resultB.value === 'object') {\n        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && !$setHas(a, resultB.value)\n        && !setHasEqualElement(set, resultB.value, opts.strict, channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction mapEquiv(a, b, opts, channel) {\n  if ($mapSize(a) !== $mapSize(b)) {\n    return false;\n  }\n  var iA = getIterator(a);\n  var iB = getIterator(b);\n  var resultA;\n  var resultB;\n  var set;\n  var key;\n  var item1;\n  var item2;\n  while ((resultA = iA.next()) && !resultA.done) {\n    key = resultA.value[0];\n    item1 = resultA.value[1];\n    if (key && typeof key === 'object') {\n      if (!set) { set = new $Set(); }\n      $setAdd(set, key);\n    } else {\n      item2 = $mapGet(b, key);\n      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {\n        if (opts.strict) {\n          return false;\n        }\n        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {\n          return false;\n        }\n        if (!set) { set = new $Set(); }\n        $setAdd(set, key);\n      }\n    }\n  }\n\n  if (set) {\n    while ((resultB = iB.next()) && !resultB.done) {\n      key = resultB.value[0];\n      item2 = resultB.value[1];\n      if (key && typeof key === 'object') {\n        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {\n          return false;\n        }\n      } else if (\n        !opts.strict\n        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))\n        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)\n      ) {\n        return false;\n      }\n    }\n    return $setSize(set) === 0;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts, channel) {\n  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5], max-lines: [2, 400] */\n  var i, key;\n\n  if (typeof a !== typeof b) { return false; }\n  if (a == null || b == null) { return false; }\n\n  if ($objToString(a) !== $objToString(b)) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsArray = isArray(a);\n  var bIsArray = isArray(b);\n  if (aIsArray !== bIsArray) { return false; }\n\n  // TODO: replace when a cross-realm brand check is available\n  var aIsError = a instanceof Error;\n  var bIsError = b instanceof Error;\n  if (aIsError !== bIsError) { return false; }\n  if (aIsError || bIsError) {\n    if (a.name !== b.name || a.message !== b.message) { return false; }\n  }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {\n    return false;\n  }\n\n  var aIsDate = isDate(a);\n  var bIsDate = isDate(b);\n  if (aIsDate !== bIsDate) { return false; }\n  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here\n    if ($getTime(a) !== $getTime(b)) { return false; }\n  }\n  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }\n\n  var aWhich = whichTypedArray(a);\n  var bWhich = whichTypedArray(b);\n  if ((aWhich || bWhich) && aWhich !== bWhich) {\n    return false;\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  var aIsArrayBuffer = isArrayBuffer(a);\n  var bIsArrayBuffer = isArrayBuffer(b);\n  if (aIsArrayBuffer !== bIsArrayBuffer) { return false; }\n  if (aIsArrayBuffer || bIsArrayBuffer) { // && would work too, because both are true or both false here\n    if (byteLength(a) !== byteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  var aIsSAB = isSharedArrayBuffer(a);\n  var bIsSAB = isSharedArrayBuffer(b);\n  if (aIsSAB !== bIsSAB) { return false; }\n  if (aIsSAB || bIsSAB) { // && would work too, because both are true or both false here\n    if (sabByteLength(a) !== sabByteLength(b)) { return false; }\n    return typeof Uint8Array === 'function' && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel);\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq\n  }\n\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }\n  }\n\n  var aCollection = whichCollection(a);\n  var bCollection = whichCollection(b);\n  if (aCollection !== bCollection) {\n    return false;\n  }\n  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection\n    return setEquiv(a, b, opts, channel);\n  }\n  if (aCollection === 'Map') { // aCollection === bCollection\n    return mapEquiv(a, b, opts, channel);\n  }\n\n  return true;\n}\n\nmodule.exports = function deepEqual(a, b, opts) {\n  return internalDeepEqual(a, b, opts, getSideChannel());\n};\n"},"lineCount":386}},"error":null,"hash":"762cba65163a480a9053c01c0762e3f4","cacheData":{"env":{}}}