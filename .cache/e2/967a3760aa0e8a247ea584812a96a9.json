{"id":"../../node_modules/restructure/src/EncodeStream.js","dependencies":[{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\package.json","includedInParent":true,"mtime":1695411147775},{"name":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\package.json","includedInParent":true,"mtime":1695411146838},{"name":"stream","loc":{"line":2,"column":23,"index":34},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\stream-browserify\\index.js"},{"name":"./DecodeStream","loc":{"line":3,"column":29,"index":74},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\DecodeStream.js"},{"name":"iconv-lite","optional":true,"loc":{"line":4,"column":22,"index":115},"parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\iconv-lite\\lib\\index.js"},{"name":"buffer","parent":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\restructure\\src\\EncodeStream.js","resolved":"C:\\Users\\jimit\\Desktop\\ReadStop\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nlet iconv;\nconst stream = require('stream');\nconst DecodeStream = require('./DecodeStream');\ntry { iconv = require('iconv-lite'); } catch (error) {}\n\nclass EncodeStream extends stream.Readable {\n  constructor(bufferSize =  65536) {\n    super(...arguments);\n    this.buffer = Buffer.alloc(bufferSize);\n    this.bufferOffset = 0;\n    this.pos = 0;\n  }\n\n  // do nothing, required by node\n  _read() {}\n\n  ensure(bytes) {\n    if ((this.bufferOffset + bytes) > this.buffer.length) {\n      return this.flush();\n    }\n  }\n\n  flush() {\n    if (this.bufferOffset > 0) {\n      this.push(Buffer.from(this.buffer.slice(0, this.bufferOffset)));\n      return this.bufferOffset = 0;\n    }\n  }\n\n  writeBuffer(buffer) {\n    this.flush();\n    this.push(buffer);\n    return this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':\n        return this.writeBuffer(Buffer.from(string, encoding));\n\n      case 'utf16be':\n        var buf = Buffer.from(string, 'utf16le');\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n\n        return this.writeBuffer(buf);\n\n      default:\n        if (iconv) {\n          return this.writeBuffer(iconv.encode(string, encoding));\n        } else {\n          throw new Error('Install iconv-lite to enable additional string encodings.');\n        }\n    }\n  }\n\n  writeUInt24BE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8)  & 0xff;\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    return this.pos += 3;\n  }\n\n  writeUInt24LE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    return this.pos += 3;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      return this.writeUInt24BE(val);\n    } else {\n      return this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      return this.writeUInt24LE(val);\n    } else {\n      return this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.ensure(length);\n      this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n      this.bufferOffset += length;\n      return this.pos += length;\n    } else {\n      const buf = Buffer.alloc(length);\n      buf.fill(val);\n      return this.writeBuffer(buf);\n    }\n  }\n\n  end() {\n    this.flush();\n    return this.push(null);\n  }\n}\n\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 5) === 'write') {\n    const bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n    EncodeStream.prototype[key] = function(value) {\n      this.ensure(bytes);\n      this.buffer[key](value, this.bufferOffset);\n      this.bufferOffset += bytes;\n      return this.pos += bytes;\n    };\n  }\n}\n\nmodule.exports = EncodeStream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/restructure/src/EncodeStream.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}}],"sources":{"../../node_modules/restructure/src/EncodeStream.js":"let iconv;\nconst stream = require('stream');\nconst DecodeStream = require('./DecodeStream');\ntry { iconv = require('iconv-lite'); } catch (error) {}\n\nclass EncodeStream extends stream.Readable {\n  constructor(bufferSize =  65536) {\n    super(...arguments);\n    this.buffer = Buffer.alloc(bufferSize);\n    this.bufferOffset = 0;\n    this.pos = 0;\n  }\n\n  // do nothing, required by node\n  _read() {}\n\n  ensure(bytes) {\n    if ((this.bufferOffset + bytes) > this.buffer.length) {\n      return this.flush();\n    }\n  }\n\n  flush() {\n    if (this.bufferOffset > 0) {\n      this.push(Buffer.from(this.buffer.slice(0, this.bufferOffset)));\n      return this.bufferOffset = 0;\n    }\n  }\n\n  writeBuffer(buffer) {\n    this.flush();\n    this.push(buffer);\n    return this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    switch (encoding) {\n      case 'utf16le': case 'ucs2': case 'utf8': case 'ascii':\n        return this.writeBuffer(Buffer.from(string, encoding));\n\n      case 'utf16be':\n        var buf = Buffer.from(string, 'utf16le');\n\n        // swap the bytes\n        for (let i = 0, end = buf.length - 1; i < end; i += 2) {\n          const byte = buf[i];\n          buf[i] = buf[i + 1];\n          buf[i + 1] = byte;\n        }\n\n        return this.writeBuffer(buf);\n\n      default:\n        if (iconv) {\n          return this.writeBuffer(iconv.encode(string, encoding));\n        } else {\n          throw new Error('Install iconv-lite to enable additional string encodings.');\n        }\n    }\n  }\n\n  writeUInt24BE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8)  & 0xff;\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    return this.pos += 3;\n  }\n\n  writeUInt24LE(val) {\n    this.ensure(3);\n    this.buffer[this.bufferOffset++] = val & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 8) & 0xff;\n    this.buffer[this.bufferOffset++] = (val >>> 16) & 0xff;\n    return this.pos += 3;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      return this.writeUInt24BE(val);\n    } else {\n      return this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      return this.writeUInt24LE(val);\n    } else {\n      return this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.ensure(length);\n      this.buffer.fill(val, this.bufferOffset, this.bufferOffset + length);\n      this.bufferOffset += length;\n      return this.pos += length;\n    } else {\n      const buf = Buffer.alloc(length);\n      buf.fill(val);\n      return this.writeBuffer(buf);\n    }\n  }\n\n  end() {\n    this.flush();\n    return this.push(null);\n  }\n}\n\nfor (let key in Buffer.prototype) {\n  if (key.slice(0, 5) === 'write') {\n    const bytes = +DecodeStream.TYPES[key.replace(/write|[BL]E/g, '')];\n    EncodeStream.prototype[key] = function(value) {\n      this.ensure(bytes);\n      this.buffer[key](value, this.bufferOffset);\n      this.bufferOffset += bytes;\n      return this.pos += bytes;\n    };\n  }\n}\n\nmodule.exports = EncodeStream;\n"},"lineCount":127}},"error":null,"hash":"1c60a1be9cf075ef7723436c63ebfef8","cacheData":{"env":{}}}